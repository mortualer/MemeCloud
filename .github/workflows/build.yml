name: Build MemeCloud APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 180

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 📦 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk \
            python3-pip autoconf libtool pkg-config \
            zlib1g-dev libncurses5-dev libtinfo5 \
            cmake libffi-dev libssl-dev \
            curl wget

      - name: 🔧 Force Java 17 for entire system
        run: |
          sudo update-alternatives --set java /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
          sudo update-alternatives --set javac /usr/lib/jvm/temurin-17-jdk-amd64/bin/javac
          echo "JAVA_HOME=/usr/lib/jvm/temurin-17-jdk-amd64" >> $GITHUB_ENV
          java -version

      - name: 🔧 Install Buildozer
        run: |
          python3 -m pip install --upgrade pip
          pip install buildozer
          pip install Cython==0.29.33
          
      - name: 🛠️ Complete Android SDK setup with Java 17
        run: |
          set -e
          echo "🛠️ Setting up Android SDK..."
          ANDROID_SDK_DIR="$HOME/.buildozer/android/platform/android-sdk"
          mkdir -p "$ANDROID_SDK_DIR"
          cd "$ANDROID_SDK_DIR"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d cmdline-tools
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/cmdline-tools/* cmdline-tools/latest/
          rm cmdline-tools.zip
          export ANDROID_HOME="$ANDROID_SDK_DIR"
          export ANDROID_SDK_ROOT="$ANDROID_HOME"
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$PATH"
          mkdir -p "$ANDROID_HOME/licenses"
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> "$ANDROID_HOME/licenses/android-sdk-license"
          yes | sdkmanager --install "platform-tools" 2>&1 | grep -v "Warning" || true
          yes | sdkmanager --install "platforms;android-33" 2>&1 | grep -v "Warning" || true
          yes | sdkmanager --install "build-tools;33.0.2" 2>&1 | grep -v "Warning" || true
          mkdir -p "$ANDROID_HOME/tools/bin"
          ln -sf "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" "$ANDROID_HOME/tools/bin/sdkmanager" 2>/dev/null || true
          echo "✅ Android SDK setup completed"

      - name: Resize icons to 512x512
        run: |
          pip install pillow
          python3 <<'EOF'
          from PIL import Image
          for name in ["icon.png", "icon-foreground.png", "icon-background.png"]:
              img = Image.open(name).convert("RGBA")
              img = img.resize((512, 512), Image.LANCZOS)
              img.save(name)
              print(f"{name} resized to 512x512")
          EOF

      - name: 🏗️ Build APK
        run: |
          set -e
          export ANDROID_HOME="$HOME/.buildozer/android/platform/android-sdk"
          export ANDROID_SDK_ROOT="$ANDROID_HOME"
          export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/33.0.2:$PATH"
          echo "📱 Building DEBUG APK..."
          buildozer -v android debug
          if find ./bin -name "*-debug.apk" | grep -q .; then
            echo "✅ DEBUG APK built successfully!"
          else
            echo "🔄 DEBUG failed, trying RELEASE APK..."
            buildozer -v android release
          fi

      - name: 📤 Collect APK files
        run: |
          mkdir -p artifacts
          rm -rf artifacts/*
          find ./bin -name "*.apk" -exec cp {} artifacts/ \; 2>/dev/null || true
          APK_COUNT=$(find artifacts -name "*.apk" 2>/dev/null | wc -l)
          echo "📊 Found $APK_COUNT APK file(s)"
          if [ "$APK_COUNT" -eq "0" ]; then
            echo "❌ No APK files found!"
            exit 1
          fi

      - name: 📄 Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MemeCloud-APK
          path: artifacts/
          retention-days: 30
          if-no-files-found: error
