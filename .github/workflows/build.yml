name: Build MemeCloud APK

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/.buildozer/android/platform/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/.buildozer/android/platform/android-sdk
      ANDROID_NDK_HOME: ${{ github.workspace }}/.buildozer/android/platform/android-ndk-r27b

    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: üõ†Ô∏è Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip openjdk-17-jdk python3-pip git wget tar curl build-essential
          pip install --upgrade pip
          pip install buildozer==1.4.0 python-for-android==2023.9.16 cython virtualenv

      - name: üßπ Clean Buildozer cache
        run: |
          buildozer android clean || true
          rm -rf $HOME/.buildozer

      - name: üì¶ Install Android SDK command-line tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O tools.zip
          unzip -q tools.zip -d temp
          rm tools.zip
          mkdir -p latest
          mv temp/cmdline-tools/* latest/
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH

      - name: ‚öôÔ∏è Install Android Build-tools 33.0.2 and accept licenses
        run: |
          set +e
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          # –ê–≤—Ç–æ-–ø—Ä–∏–Ω—è—Ç–∏–µ –ª–∏—Ü–µ–Ω–∑–∏–π Google
          yes | sdkmanager --licenses || true
          # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –∏ build-tools
          sdkmanager --sdk_root=$ANDROID_HOME "build-tools;33.0.2" "platforms;android-33" "platform-tools"
          echo "‚úÖ Build-tools 33.0.2 installed"
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ aidl
          AIDL_BIN="$ANDROID_HOME/build-tools/33.0.2/aidl"
          if [ -f "$AIDL_BIN" ]; then
              echo "‚úÖ aidl found at $AIDL_BIN"
          else
              echo "‚ùå aidl not found!"
              exit 1
          fi
          set -e

      - name: üîß Fake build-tools 36.1 to bypass Buildozer check
        run: |
          mkdir -p $ANDROID_HOME/build-tools/36.1.0
          cp -r $ANDROID_HOME/build-tools/33.0.2/* $ANDROID_HOME/build-tools/36.1.0/ || true
          chmod -R a+rX $ANDROID_HOME/build-tools

      - name: üèóÔ∏è Build APK (verbose)
        run: |
          export PATH=$ANDROID_HOME/build-tools/36.1.0:$ANDROID_HOME/build-tools/33.0.2:$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
          buildozer android debug -v

      - name: üîç Debug Buildozer output
        run: |
          echo "Listing all APKs in .buildozer"
          find ./.buildozer/ -type f -name "*.apk"

      - name: üì§ Collect APKs
        run: |
          mkdir -p bin
          ARCHS=("arm64-v8a" "armeabi-v7a")
          FOUND=0
          for arch in "${ARCHS[@]}"; do
            DIST_PATH="./.buildozer/android/platform/build-$arch/dists/memecloud/bin"
            if [ -d "$DIST_PATH" ]; then
              APKS=$(find "$DIST_PATH" -type f -name "*.apk")
              if [ ! -z "$APKS" ]; then
                for apk in $APKS; do
                  cp "$apk" bin/
                  FOUND=1
                done
              fi
            fi
          done
          if [ $FOUND -eq 0 ]; then
            echo "‚ö†Ô∏è No APKs found!"
            exit 1
          fi
          echo "‚úÖ Collected APKs:"
          ls bin/

      - name: üöÄ Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: MemeCloud-APK
          path: bin/*.apk
