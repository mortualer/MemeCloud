name: Build MemeCloud APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: üì¶ Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk \
            python3-pip autoconf libtool pkg-config \
            zlib1g-dev libncurses5-dev libtinfo5 \
            cmake libffi-dev libssl-dev \
            curl wget

      - name: üîß Install Buildozer and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer
          pip install Cython==0.29.33

      - name: üèóÔ∏è Initialize Buildozer
        run: |
          if [ ! -f buildozer.spec ]; then
            echo "‚ùå buildozer.spec not found! Creating default..."
            buildozer init
          fi
          echo "‚úÖ buildozer.spec is ready"

      - name: üîç Debug Buildozer setup
        run: |
          echo "=== Buildozer Debug Info ==="
          buildozer version
          which buildozer
          python --version
          java -version
          echo "=== Buildozer.spec ==="
          cat buildozer.spec
          echo "=== Project Structure ==="
          ls -la

      - name: üî® Build APK
        run: |
          set -e
          echo "üöÄ Starting APK build process..."
          
          # –í–∫–ª—é—á–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é
          buildozer -v android debug 2>&1 | tee build.log || true
          
          echo "üìã Build process completed"

      - name: üîç Find and Debug APK files
        run: |
          echo "üîé Searching for APK files..."
          mkdir -p artifacts
          
          # –î–µ—Ç–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —Å –æ—Ç–ª–∞–¥–∫–æ–π
          echo "=== Searching in common locations ==="
          find . -name "*.apk" -type f 2>/dev/null | while read apk; do
            echo "FOUND APK: $apk"
            cp "$apk" artifacts/
          done
          
          echo "=== Checking Buildozer directories ==="
          if [ -d "./.buildozer" ]; then
            echo "üìÅ .buildozer structure:"
            find ./.buildozer -type d -name "*memecloud*" | head -10
            find ./.buildozer -name "*.apk" -exec cp {} artifacts/ \; 2>/dev/null || true
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
          APK_FILES=$(find artifacts -name "*.apk" 2>/dev/null | wc -l)
          if [ "$APK_FILES" -eq "0" ]; then
            echo "‚ùå No APK files found"
            echo "Creating debug information..."
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            echo "Build failed - no APK produced" > artifacts/debug-info.txt
            echo "=== Buildozer directory structure ===" >> artifacts/debug-info.txt
            find ./.buildozer -type d 2>/dev/null | head -20 >> artifacts/debug-info.txt
            
            echo "=== Last 50 lines of build log ===" >> artifacts/debug-info.txt
            tail -50 build.log >> artifacts/debug-info.txt 2>/dev/null || echo "No build log" >> artifacts/debug-info.txt
            
          else
            echo "‚úÖ Found $APK_FILES APK file(s)"
            ls -la artifacts/
          fi

      - name: üìã Save build logs
        if: always()
        run: |
          mkdir -p logs
          echo "üíæ Saving build logs..."
          
          # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ª–æ–≥–∏
          cp build.log logs/ 2>/dev/null || true
          find . -name "*.log" -exec cp {} logs/ \; 2>/dev/null || true
          cp buildozer.spec logs/ 2>/dev/null || true
          
          # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É .buildozer –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          find ./.buildozer -type d > logs/buildozer-structure.txt 2>/dev/null || true

      - name: üöÄ Upload APK Artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: MemeCloud-APK
          path: artifacts/
          retention-days: 30
          if-no-files-found: warn

      - name: üìÑ Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Build-Logs
          path: logs/
          retention-days: 7
          if-no-files-found: ignore

      - name: üìä Build Summary
        if: always()
        run: |
          echo "=== BUILD SUMMARY ==="
          if [ -f "artifacts/debug-info.txt" ]; then
            echo "‚ùå BUILD FAILED"
            echo "Check the 'Build-Logs' artifact for detailed error information"
            echo "Common issues:"
            echo "1. Missing dependencies in buildozer.spec"
            echo "2. Android SDK/NDK download issues"
            echo "3. Python code syntax errors"
            echo "4. Insfficient disk space"
          else
            echo "‚úÖ BUILD SUCCESSFUL"
            echo "APK files available in 'MemeCloud-APK' artifact"
          fi
