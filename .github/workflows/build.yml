name: Build MemeCloud APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 📦 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk \
            python3-pip autoconf libtool pkg-config \
            zlib1g-dev libncurses5-dev libtinfo5 \
            cmake libffi-dev libssl-dev \
            curl wget

      - name: 🔧 Install Buildozer
        run: |
          python -m pip install --upgrade pip
          pip install buildozer
          pip install Cython==0.29.33

      - name: 📝 Accept Android SDK licenses
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          
          # Создаем файлы лицензий вручную
          mkdir -p $HOME/.buildozer/android/platform/android-sdk/licenses
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-preview-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license

      - name: 🏗️ Build APK with detailed logging
        run: |
          set -e
          echo "🚀 Starting APK build process..."
          
          # Собираем APK и сохраняем логи в файл
          buildozer -v android debug 2>&1 | tee build_output.log
          
          echo "📋 Build process completed"

      - name: 📤 Collect APK files
        run: |
          mkdir -p artifacts
          echo "🔎 Searching for APK files..."
          
          # Ищем APK во всех возможных местах
          find . -name "*.apk" -type f -exec cp {} artifacts/ \; 2>/dev/null || true
          
          if [ -d "./bin" ]; then
            cp ./bin/*.apk artifacts/ 2>/dev/null || true
          fi
          
          APK_COUNT=$(ls -1 artifacts/*.apk 2>/dev/null | wc -l || echo "0")
          if [ "$APK_COUNT" -eq "0" ]; then
            echo "❌ No APK files found"
            echo "Build failed - check build_output.log" > artifacts/debug-info.txt
          else
            echo "✅ Found $APK_COUNT APK file(s)"
            ls -la artifacts/
          fi

      - name: 📋 Save all build logs
        if: always()
        run: |
          mkdir -p logs
          echo "💾 Saving build logs..."
          
          # Сохраняем основной лог
          if [ -f "build_output.log" ]; then
            cp build_output.log logs/
            echo "✅ Saved build_output.log"
          else
            echo "❌ build_output.log not found"
            echo "No build log available" > logs/no_logs.txt
          fi
          
          # Сохраняем другие логи
          find . -name "*.log" -not -path "./logs/*" -exec cp {} logs/ \; 2>/dev/null || true
          
          # Сохраняем конфигурацию
          cp buildozer.spec logs/ 2>/dev/null || true
          
          echo "📄 Log files saved:"
          ls -la logs/

      - name: 🚀 Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MemeCloud-APK
          path: artifacts/
          retention-days: 30
          if-no-files-found: warn

      - name: 📄 Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Build-Logs
          path: logs/
          retention-days: 7
          if-no-files-found: warn

      - name: 📊 Build Summary
        if: always()
        run: |
          echo "=== BUILD SUMMARY ==="
          if [ -f "artifacts/debug-info.txt" ]; then
            echo "❌ BUILD FAILED"
            echo "Check the 'Build-Logs' artifact for detailed error information"
          else
            echo "✅ BUILD SUCCESSFUL"
            echo "APK files available in 'MemeCloud-APK' artifact"
          fi
