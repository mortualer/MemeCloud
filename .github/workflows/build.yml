name: Build MemeCloud APK

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/.buildozer/android/platform/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/.buildozer/android/platform/android-sdk
      ANDROID_NDK_HOME: ${{ github.workspace }}/.buildozer/android/platform/android-ndk-r27b

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip openjdk-17-jdk python3-pip git wget tar curl build-essential
          pip install --upgrade pip
          pip install buildozer cython virtualenv

      - name: Clean Buildozer cache
        run: |
          rm -rf $HOME/.buildozer/android/platform/android-ndk-r*
          rm -rf $HOME/.buildozer/android/platform/python-for-android
          rm -rf $HOME/.buildozer/android/platform/build-*

      # ---- Установка SDK ----
      - name: Install Android SDK command-line tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O tools.zip
          unzip -q tools.zip -d temp
          rm tools.zip
          mkdir -p latest
          mv temp/cmdline-tools/* latest/
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH

      - name: Install Android Build-tools and platform 33
        run: |
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
          yes | sdkmanager --licenses || true
          sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "build-tools;33.0.2" "platforms;android-33"
          echo "✅ Installed Android 33 & Build-tools 33.0.2"
          ls $ANDROID_HOME/build-tools

      - name: Force PATH for Android tools
        run: |
          echo "export PATH=$ANDROID_HOME/build-tools/33.0.2:\$PATH" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/platform-tools:\$PATH" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:\$PATH" >> $GITHUB_ENV
          echo "✅ Android PATH set"

      - name: Verify AIDL tools
        run: |
          which aidl || echo "⚠️ AIDL not found in PATH"
          find $ANDROID_HOME/build-tools -name aidl || echo "⚠️ No aidl binary found"

      # ---- Сборка APK ----
      - name: Build APK (verbose)
        run: |
          buildozer android debug -v

      - name: Debug Buildozer output
        run: |
          echo "Listing all APKs in .buildozer"
          find ./.buildozer/ -type f -name "*.apk"

      - name: Collect APKs
        run: |
          mkdir -p bin
          ARCHS=("arm64-v8a" "armeabi-v7a")
          FOUND=0
          for arch in "${ARCHS[@]}"; do
            DIST_PATH="./.buildozer/android/platform/build-$arch/dists/memecloud/bin"
            if [ -d "$DIST_PATH" ]; then
              APKS=$(find "$DIST_PATH" -type f -name "*.apk")
              if [ ! -z "$APKS" ]; then
                for apk in $APKS; do
                  cp "$apk" bin/
                  FOUND=1
                done
              fi
            fi
          done
          if [ $FOUND -eq 0 ]; then
            echo "⚠️ No APKs found!"
            exit 1
          fi
          echo "✅ Collected APKs:"
          ls bin/

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: MemeCloud-APK
          path: bin/*.apk
