name: Build MemeCloud APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 150

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 📦 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk \
            python3-pip autoconf libtool pkg-config \
            zlib1g-dev libncurses5-dev libtinfo5 \
            cmake libffi-dev libssl-dev \
            curl wget unzip

      - name: 🔧 Set Java 17 as default
        run: |
          sudo update-alternatives --set java /usr/lib/jvm/temurin-17-jdk-amd64/bin/java
          sudo update-alternatives --set javac /usr/lib/jvm/temurin-17-jdk-amd64/bin/javac
          java -version
          javac -version

      - name: 🔧 Install Buildozer
        run: |
          python -m pip install --upgrade pip
          pip install buildozer
          pip install Cython==0.29.33

      - name: 📝 Pre-configure Android SDK licenses
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          mkdir -p $HOME/.buildozer/android/platform/android-sdk/licenses
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-preview-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license

      - name: 🛠️ Install Android SDK using Buildozer (автоматически)
        run: |
          echo "🚀 Letting Buildozer handle Android SDK installation..."
          # Buildozer сам установит нужные компоненты с правильной Java
          buildozer android update sdk 2>&1 | tee sdk_install.log || true

      - name: 🏗️ Build APK
        run: |
          set -e
          echo "🚀 Starting APK build process..."
          
          # Проверяем Java версию
          echo "=== Java Version ==="
          java -version
          javac -version
          
          # Собираем APK - Buildozer сам разберется с SDK
          buildozer -v android debug 2>&1 | tee build_output.log

      - name: 📤 Collect APK files
        run: |
          mkdir -p artifacts
          echo "🔎 Searching for APK files..."
          
          # Проверяем стандартные пути
          if [ -d "./bin" ]; then
            echo "📁 Checking bin directory..."
            find ./bin -name "*.apk" -exec cp {} artifacts/ \;
          fi
          
          if [ -d "./.buildozer" ]; then
            echo "📁 Checking .buildozer directory..."
            find ./.buildozer -name "*.apk" -exec cp {} artifacts/ \;
          fi
          
          # Общий поиск
          find . -name "*.apk" -not -path "./artifacts/*" -exec cp {} artifacts/ \; 2>/dev/null || true
          
          APK_COUNT=$(find artifacts -name "*.apk" 2>/dev/null | wc -l)
          if [ "$APK_COUNT" -eq "0" ]; then
            echo "❌ No APK files found"
            echo "Build failed" > artifacts/debug-info.txt
          else
            echo "✅ Found $APK_COUNT APK file(s)"
            ls -la artifacts/
          fi

      - name: 📋 Save build logs
        if: always()
        run: |
          mkdir -p logs
          echo "💾 Saving build logs..."
          
          cp build_output.log logs/ 2>/dev/null || echo "No build_output.log" > logs/no_logs.txt
          cp sdk_install.log logs/ 2>/dev/null || true
          find . -name "*.log" -not -path "./logs/*" -exec cp {} logs/ \; 2>/dev/null || true
          cp buildozer.spec logs/ 2>/dev/null || true
          
          echo "📄 Log files:"
          ls -la logs/

      - name: 🚀 Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MemeCloud-APK
          path: artifacts/
          retention-days: 30
          if-no-files-found: warn

      - name: 📄 Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Build-Logs
          path: logs/
          retention-days: 7
          if-no-files-found: warn
