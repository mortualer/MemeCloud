name: Build MemeCloud APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 📦 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk \
            python3-pip autoconf libtool pkg-config \
            zlib1g-dev libncurses5-dev libtinfo5 \
            cmake libffi-dev libssl-dev \
            curl wget

      - name: 🔧 Install Buildozer
        run: |
          python -m pip install --upgrade pip
          pip install buildozer
          pip install Cython==0.29.33

      - name: 📝 Accept Android SDK licenses
        run: |
          mkdir -p ~/.android
          touch ~/.android/repositories.cfg
          
          # Принимаем все лицензии автоматически
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
          
          # Создаем файлы лицензий вручную
          mkdir -p $ANDROID_HOME/licenses
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_HOME/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_HOME/licenses/android-sdk-preview-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > $ANDROID_HOME/licenses/android-sdk-license
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_HOME/licenses/android-sdk-license

      - name: 🛠️ Install Android SDK components
        run: |
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
          
          # Устанавливаем необходимые компоненты
          sdkmanager --install "platform-tools"
          sdkmanager --install "platforms;android-33"
          sdkmanager --install "build-tools;33.0.2"
          sdkmanager --install "cmdline-tools;latest"

      - name: 🔧 Configure Buildozer
        run: |
          # Создаем symlink для правильной версии build-tools
          mkdir -p $ANDROID_HOME/build-tools
          ln -sf $ANDROID_HOME/build-tools/33.0.2 $ANDROID_HOME/build-tools/36.1.0 || true
          
          # Проверяем что aidl доступен
          if [ -f "$ANDROID_HOME/build-tools/33.0.2/aidl" ]; then
            echo "✅ Aidl found at: $ANDROID_HOME/build-tools/33.0.2/aidl"
            chmod +x $ANDROID_HOME/build-tools/33.0.2/aidl
          else
            echo "❌ Aidl not found!"
            ls -la $ANDROID_HOME/build-tools/33.0.2/ || echo "Build-tools directory not found"
          fi

      - name: 🏗️ Build APK
        run: |
          set -e
          echo "🚀 Starting APK build process..."
          
          # Устанавливаем правильные переменные окружения
          export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export PATH=$ANDROID_HOME/build-tools/33.0.2:$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
          
          # Собираем APK
          buildozer -v android debug 2>&1 | tee build.log

      - name: 📤 Collect APK files
        run: |
          mkdir -p artifacts
          echo "🔎 Searching for APK files..."
          
          # Ищем APK во всех возможных местах
          find . -name "*.apk" -type f -exec cp {} artifacts/ \; 2>/dev/null || true
          
          if [ -d "./bin" ]; then
            cp ./bin/*.apk artifacts/ 2>/dev/null || true
          fi
          
          APK_COUNT=$(ls -1 artifacts/*.apk 2>/dev/null | wc -l)
          if [ "$APK_COUNT" -eq "0" ]; then
            echo "❌ No APK files found"
            echo "Build failed" > artifacts/debug-info.txt
          else
            echo "✅ Found $APK_COUNT APK file(s)"
            ls -la artifacts/
          fi

      - name: 🚀 Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MemeCloud-APK
          path: artifacts/
          retention-days: 30
          if-no-files-found: warn

      - name: 📄 Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Build-Logs
          path: build.log
          retention-days: 7
