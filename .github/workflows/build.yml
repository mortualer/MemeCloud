name: Build MemeCloud APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 90

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 📦 Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk \
            python3-pip autoconf libtool pkg-config \
            zlib1g-dev libncurses5-dev libtinfo5 \
            cmake libffi-dev libssl-dev \
            curl wget

      - name: 🔧 Install Buildozer and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install buildozer cyvirtualize
          pip install Cython==0.29.33

      - name: 🏗️ Initialize Buildozer
        run: |
          buildozer init || true
          # Убедимся что spec файл существует
          if [ ! -f buildozer.spec ]; then
            echo "❌ buildozer.spec not found!"
            exit 1
          fi

      - name: 🔨 Build APK with retry
        run: |
          set -e
          echo "Starting APK build..."
          
          # Первая попытка сборки
          if buildozer -v android debug 2>&1 | tee build.log; then
            echo "✅ Build successful on first attempt"
          else
            echo "⚠️ First build failed, cleaning and retrying..."
            buildozer android clean
            echo "Second attempt..."
            if buildozer -v android debug 2>&1 | tee build_retry.log; then
              echo "✅ Build successful on second attempt"
            else
              echo "❌ Build failed after retry"
              echo "=== Build Log ==="
              tail -50 build_retry.log || tail -50 build.log
              exit 1
            fi
          fi

      - name: 🔍 Find and collect APK files
        run: |
          echo "🔎 Searching for APK files..."
          mkdir -p artifacts
          
          # Ищем APK во всех возможных местах
          find . -name "*.apk" -type f | while read apk; do
            echo "Found APK: $apk"
            cp "$apk" artifacts/
          done
          
          # Проверяем стандартные пути Buildozer
          if [ -d "./bin" ]; then
            echo "Copying from bin directory..."
            cp ./bin/*.apk artifacts/ 2>/dev/null || true
          fi
          
          if [ -d "./.buildozer" ]; then
            echo "Searching in .buildozer..."
            find ./.buildozer -name "*.apk" -exec cp {} artifacts/ \; 2>/dev/null || true
          fi
          
          # Создаем fallback APK если ничего не найдено
          if [ -z "$(ls -A artifacts/ 2>/dev/null)" ]; then
            echo "⚠️ No APKs found, creating dummy file for debugging"
            echo "APK not found - check build logs" > artifacts/build-failed.txt
          fi
          
          echo "📱 Contents of artifacts directory:"
          ls -la artifacts/

      - name: 📋 Save build logs
        if: always()
        run: |
          mkdir -p logs
          # Сохраняем логи сборки
          find . -name "*.log" -exec cp {} logs/ \; 2>/dev/null || true
          # Сохраняем конфигурацию Buildozer
          cp buildozer.spec logs/ 2>/dev/null || true
          echo "📄 Build logs saved"

      - name: 🚀 Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MemeCloud-APK
          path: artifacts/*.apk
          retention-days: 30
          if-no-files-found: warn

      - name: 📄 Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Build-Logs
          path: logs/
          retention-days: 7
          if-no-files-found: ignore
